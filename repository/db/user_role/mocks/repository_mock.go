// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	db "attendance/model/db"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUserRole is a mock of IUserRole interface.
type MockIUserRole struct {
	ctrl     *gomock.Controller
	recorder *MockIUserRoleMockRecorder
}

// MockIUserRoleMockRecorder is the mock recorder for MockIUserRole.
type MockIUserRoleMockRecorder struct {
	mock *MockIUserRole
}

// NewMockIUserRole creates a new mock instance.
func NewMockIUserRole(ctrl *gomock.Controller) *MockIUserRole {
	mock := &MockIUserRole{ctrl: ctrl}
	mock.recorder = &MockIUserRoleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserRole) EXPECT() *MockIUserRoleMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIUserRole) Create(ctx context.Context, userRole *db.UserRole) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, userRole)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIUserRoleMockRecorder) Create(ctx, userRole interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIUserRole)(nil).Create), ctx, userRole)
}
