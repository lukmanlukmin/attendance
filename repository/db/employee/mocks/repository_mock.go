// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	db "attendance/model/db"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIEmployee is a mock of IEmployee interface.
type MockIEmployee struct {
	ctrl     *gomock.Controller
	recorder *MockIEmployeeMockRecorder
}

// MockIEmployeeMockRecorder is the mock recorder for MockIEmployee.
type MockIEmployeeMockRecorder struct {
	mock *MockIEmployee
}

// NewMockIEmployee creates a new mock instance.
func NewMockIEmployee(ctrl *gomock.Controller) *MockIEmployee {
	mock := &MockIEmployee{ctrl: ctrl}
	mock.recorder = &MockIEmployeeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEmployee) EXPECT() *MockIEmployeeMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIEmployee) Create(ctx context.Context, emp *db.Employee) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, emp)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIEmployeeMockRecorder) Create(ctx, emp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIEmployee)(nil).Create), ctx, emp)
}

// GetBatch mocks base method.
func (m *MockIEmployee) GetBatch(ctx context.Context, batchSize, offset int) ([]db.Employee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBatch", ctx, batchSize, offset)
	ret0, _ := ret[0].([]db.Employee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBatch indicates an expected call of GetBatch.
func (mr *MockIEmployeeMockRecorder) GetBatch(ctx, batchSize, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBatch", reflect.TypeOf((*MockIEmployee)(nil).GetBatch), ctx, batchSize, offset)
}

// GetByID mocks base method.
func (m *MockIEmployee) GetByID(ctx context.Context, ID uuid.UUID) (*db.Employee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, ID)
	ret0, _ := ret[0].(*db.Employee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockIEmployeeMockRecorder) GetByID(ctx, ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIEmployee)(nil).GetByID), ctx, ID)
}

// GetByUserID mocks base method.
func (m *MockIEmployee) GetByUserID(ctx context.Context, userID uuid.UUID) (*db.Employee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserID", ctx, userID)
	ret0, _ := ret[0].(*db.Employee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserID indicates an expected call of GetByUserID.
func (mr *MockIEmployeeMockRecorder) GetByUserID(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserID", reflect.TypeOf((*MockIEmployee)(nil).GetByUserID), ctx, userID)
}
