// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	db "attendance/model/db"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIPayslip is a mock of IPayslip interface.
type MockIPayslip struct {
	ctrl     *gomock.Controller
	recorder *MockIPayslipMockRecorder
}

// MockIPayslipMockRecorder is the mock recorder for MockIPayslip.
type MockIPayslipMockRecorder struct {
	mock *MockIPayslip
}

// NewMockIPayslip creates a new mock instance.
func NewMockIPayslip(ctrl *gomock.Controller) *MockIPayslip {
	mock := &MockIPayslip{ctrl: ctrl}
	mock.recorder = &MockIPayslipMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPayslip) EXPECT() *MockIPayslipMockRecorder {
	return m.recorder
}

// CreateBulk mocks base method.
func (m *MockIPayslip) CreateBulk(ctx context.Context, payslips []db.Payslip) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBulk", ctx, payslips)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBulk indicates an expected call of CreateBulk.
func (mr *MockIPayslipMockRecorder) CreateBulk(ctx, payslips interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBulk", reflect.TypeOf((*MockIPayslip)(nil).CreateBulk), ctx, payslips)
}

// GetByPayrollAndEmployee mocks base method.
func (m *MockIPayslip) GetByPayrollAndEmployee(ctx context.Context, payrollID, employeeID uuid.UUID) (*db.Payslip, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByPayrollAndEmployee", ctx, payrollID, employeeID)
	ret0, _ := ret[0].(*db.Payslip)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByPayrollAndEmployee indicates an expected call of GetByPayrollAndEmployee.
func (mr *MockIPayslipMockRecorder) GetByPayrollAndEmployee(ctx, payrollID, employeeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByPayrollAndEmployee", reflect.TypeOf((*MockIPayslip)(nil).GetByPayrollAndEmployee), ctx, payrollID, employeeID)
}

// GetResumeList mocks base method.
func (m *MockIPayslip) GetResumeList(ctx context.Context, payrollID uuid.UUID, page, perPage uint64) ([]db.ResumePayslip, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResumeList", ctx, payrollID, page, perPage)
	ret0, _ := ret[0].([]db.ResumePayslip)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetResumeList indicates an expected call of GetResumeList.
func (mr *MockIPayslipMockRecorder) GetResumeList(ctx, payrollID, page, perPage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResumeList", reflect.TypeOf((*MockIPayslip)(nil).GetResumeList), ctx, payrollID, page, perPage)
}

// GetTotalTakeHomePay mocks base method.
func (m *MockIPayslip) GetTotalTakeHomePay(ctx context.Context, payrollID uuid.UUID) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalTakeHomePay", ctx, payrollID)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalTakeHomePay indicates an expected call of GetTotalTakeHomePay.
func (mr *MockIPayslipMockRecorder) GetTotalTakeHomePay(ctx, payrollID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalTakeHomePay", reflect.TypeOf((*MockIPayslip)(nil).GetTotalTakeHomePay), ctx, payrollID)
}
