// Package server ...
package server

import (
	"attendance/bootstrap"
	"attendance/config"
	"attendance/constant"
	defaultHandler "attendance/handler/http"
	handlerAttendance "attendance/handler/http/attendance"
	handlerAuth "attendance/handler/http/auth"
	handlerPayroll "attendance/handler/http/payroll"
	"attendance/middleware"

	_ "attendance/docs" // docs is generated by Swag CLI

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"
)

// HTTPRouter ...
// @title Attendance API
// @version 1.0.0-Beta
// @description Attendance API Documentation
// @schemes http https
// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
func (h *HTTPApi) HTTPRouter(router *fiber.App, bs *bootstrap.Bootstrap, cfg *config.Config) {

	mid := middleware.New(cfg)
	router.Get("/swagger/*", swagger.HandlerDefault) // Default /swagger/index.html
	handler := defaultHandler.NewHandler(bs)
	router.Get("/health", handler.HealthCheck)

	routerV1 := router.Group("/v1")

	authRouter := routerV1.Group("/authorize")
	authHandler := handlerAuth.NewHandler(bs)
	authRouter.Post("/login", authHandler.Login)

	attendanceHandler := handlerAttendance.NewHandler(bs)
	attendanceRouter := routerV1.Group("/attendances", mid.JWT())
	attendanceRouter.Post("", attendanceHandler.Submit, mid.Roles(constant.RoleEmployee))
	attendanceRouter.Post("/overtime", attendanceHandler.Overtime, mid.Roles(constant.RoleEmployee))
	attendanceRouter.Post("/period", attendanceHandler.CreateAttendacePeriod, mid.Roles(constant.RoleAdmin))

	payrollHandler := handlerPayroll.NewHandler(bs)
	payrollRouter := routerV1.Group("/payrolls", mid.JWT())
	payrollRouter.Post("/reimbursement", mid.Roles(constant.RoleEmployee), payrollHandler.SubmitReimbursement)
	payrollRouter.Post("/payroll/period/:id", mid.Roles(constant.RoleAdmin), payrollHandler.SubmitReimbursement)
	payrollRouter.Get("/payroll/:id/payslip", mid.Roles(constant.RoleEmployee), payrollHandler.GetPayslip)
	payrollRouter.Get("/payroll/:id/payslips", mid.Roles(constant.RoleAdmin), payrollHandler.GetSummaryPayslip)

}
